<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="02099c54-d91a-4af9-bfb3-a0e91e627d95" name="Changes" comment="- Everything is still burning">
      <change beforePath="$PROJECT_DIR$/.idea/dataSources.local.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/dataSources.local.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/dataSources.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/dataSources.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/dataSources/398d1a74-b201-4c4e-b0bc-4723445979ac.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/dataSources/398d1a74-b201-4c4e-b0bc-4723445979ac.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/dataSources/398d1a74-b201-4c4e-b0bc-4723445979ac/storage_v2/_src_/database/postgres.edMnLQ/schema/public.abK9xQ.meta" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/dataSources/398d1a74-b201-4c4e-b0bc-4723445979ac/storage_v2/_src_/database/postgres.edMnLQ/schema/public.abK9xQ.meta" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/api/apiCalls.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/api/apiCalls.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/repository/db.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/repository/db.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/router/router.go" beforeDir="false" afterPath="$PROJECT_DIR$/router/router.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Dockerfile" />
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///opt/homebrew/opt/go/libexec" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;SamsingSmoosie&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/SamsingSmoosie/Gin-And-PostgresAPI.git&quot;,
    &quot;accountId&quot;: &quot;a4acc4d0-9864-4039-8eb6-5bda4577b66e&quot;
  }
}</component>
  <component name="KubernetesApiProvider">{
  &quot;isMigrated&quot;: true
}</component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 2
}</component>
  <component name="ProjectId" id="2blu0Rhl6zr3HvaMt94VGZ6lZ0K" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "DefaultGoTemplateProperty": "Go File",
    "Docker.docker-compose.yml: Compose Deployment.executor": "Run",
    "Go Build.go build Gin-Postgres-API.executor": "Run",
    "Go Build.go build Gin-Postgres-API/src.executor": "Run",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.automatic.dependencies.download": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "git-widget-placeholder": "main",
    "go.import.settings.migrated": "true",
    "go.sdk.automatically.set": "true",
    "ignore.virus.scanning.warn.message": "true",
    "last_opened_file_path": "/Users/pagell",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "settings.sync"
  },
  "keyToStringList": {
    "DatabaseDriversLRU": [
      "postgresql"
    ],
    "com.intellij.ide.scratch.LRUPopupBuilder$1/SQL Dialect": [
      "PostgreSQL"
    ]
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\LeonardoPagel\GolandProjects\Gin-Postgres-API\utils" />
      <recent name="C:\Users\LeonardoPagel\GolandProjects\Gin-Postgres-API\src" />
      <recent name="C:\Users\LeonardoPagel\GolandProjects\Gin-Postgres-API\data" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\LeonardoPagel\GolandProjects\Gin-Postgres-API\internal\model" />
      <recent name="C:\Users\LeonardoPagel\GolandProjects\Gin-Postgres-API\internal\api" />
      <recent name="C:\Users\LeonardoPagel\GolandProjects\Gin-Postgres-API\internals" />
      <recent name="C:\Users\LeonardoPagel\GolandProjects\Gin-Postgres-API\utils" />
      <recent name="C:\Users\LeonardoPagel\GolandProjects\Gin-Postgres-API\dbpop" />
    </key>
  </component>
  <component name="RunManager" selected="Go Build.go build Gin-Postgres-API">
    <configuration name="go build Gin-Postgres-API" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="Gin-Postgres-API" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="Gin-Postgres-API" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build Gin-Postgres-API/src" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="Gin-Postgres-API" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="Gin-Postgres-API/src" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/src/main.go" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="envFilePath" value="" />
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Build.go build Gin-Postgres-API" />
        <item itemvalue="Docker.docker-compose.yml: Compose Deployment" />
        <item itemvalue="Go Build.go build Gin-Postgres-API/src" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-33c477a475b1-e0158606a674-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-241.17890.21" />
        <option value="bundled-js-predefined-1d06a55b98c1-0b3e54e931b4-JavaScript-GO-241.17890.21" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="test" />
    <MESSAGE value="-New Docker image containing Postgres Database added" />
    <MESSAGE value="-New comments added" />
    <MESSAGE value="-Database autopopulation added" />
    <MESSAGE value="-Cleaned up main file" />
    <MESSAGE value="-Created own file for gin gonic routers" />
    <MESSAGE value="-Minor edits to location or content" />
    <MESSAGE value="-Auto creation and population of db added" />
    <MESSAGE value="-controller File removed" />
    <MESSAGE value="-warnings removed" />
    <MESSAGE value="- Api calls updated to acces the DB directly" />
    <MESSAGE value="- DB struct added" />
    <MESSAGE value="- Docker compose updated to only start the container" />
    <MESSAGE value="- Compatibility updates with the new DB struct and api call methods" />
    <MESSAGE value="- Everything is burning atm&#10;- Reorganized the folder structure&#10;- Introduced the API Struct&#10;- Need to apply the API struct to the api calls" />
    <MESSAGE value="- Everything is still burning" />
    <option name="LAST_COMMIT_MESSAGE" value="- Everything is still burning" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>